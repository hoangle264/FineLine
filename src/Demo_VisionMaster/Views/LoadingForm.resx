<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOsAAADrASts18IAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEO0lEQVRYR9VXTUxcVRSeqAtN3JiYuOjOxIUb17pxYeLShaY17rRxYVIp0wczE0pDpGlTtTEYfxbG
        NEYTlFL+lNpaqGT+HjMMFBhG8adV2vJnFYESbd+9b2Y4fue983BmeCA4UONJvsW8d9/9vnvu+e65E/jf
        RvMk3W8M3a430rqx8Rt6SB7fmYiM6b3hcX0zNKqp1lRUE1OrhqlOyuvdDZA+BnIFkIMxiIg7IuhgQu+V
        YbsX4XEVY+KmnE09czZ1zdjUNGpTTVRRbVKvBIjukqE7H6Gsft5becdMgeILBTozbVPHdJ6CSWQBIoIp
        1SLDdzaMFN0H4qtMfmLSppHlIl0Czs6zAJtOfudm4WBMFeqj9KB8tnMRGtNNTB4BvrpRcMgZqUU3C7wV
        xqBkYVB9LZ/tTBjZ23tA/icLeP+yvUbuoe+XvCPiw59sZECjIC2qM+3H5fPqA8StTN6Q1ZTAvlcKyCwV
        qRMZ6JrJU3gYApyCVFPyeXURGss/AfJVFvDJ1fw6cg8Dv7pb0XrNptrE2lYckGn+XTTDUiDOMPlrsB2v
        1CPsugI3nF9xcOG6uy2fz+adgjyK8U5BJtWt5ijdI9NtPyJZez+TM7pny1PfOqnoxbYlB71T2nmWXCi6
        tsRWBPmE5Cyk1CmZbnvBZz0qfp7J34TFPNt56Lis1wT0Yf+951/OuwX59vcoSM5CXBWNAdoj0249wln9
        OpOz7fpLbOeBV+0JiMEF3vM0bNnhFKRNdUOSBdNKybRbi4acehgCLBbwAaxVSuyBV+0JSP1eLrD/hpuF
        j6aQBekT9UPqaZn+nwPEPUx+GLYzKyb3wKtm8v2nl9ZtD//mDHRCRMOImwXYck6m3zxCE9ZTTM749NrG
        tktDGAt4pWvZ9330N9eWbXAIyB0Rh0zrsND4x74zdDfaa47Jj35bbrtK8Cob+1boePSPDd9/MQdbIhPH
        c2LLuFKw5b1Ctz7Qal/1Vt8775/67cCUPtE5a/OhJFnQp4WuPBpy9AAELDD5Wz/4F14lRjbJkIdzYsv3
        fkS3RDHWxK1VXGAeEdq/I5y132XyCApvAPvnN1kpErDmge6bZPSuUGbRfwwjs1RwirEbp2T9kPQJU2WF
        1o3IqH4U5DYLOPXzxoVXiotI60twwMvty5TyaVCluCi2/Hgq79qStyKtnxN6p9dfYPIjExqe9p/ED+fQ
        ePohxO9dKbggOQPcMY/gDskCgkm96JJPqGeYnNE+XX3hbQTv+taO6xvujq6ItHUsEBpXSSY/Btttpaiq
        wVnYkkWcEFvWJnCJBfktFtB2fWt7Xw1icjh9hsOJBdRELWIBkyygBdZLbVLN1WIY2T2P45vr4B1wORmI
        6zyu2qqOBdxJHBqUGhhUPXLrsVvwolg5cDcA+7nkpr5UdlviFow/Hs9i0L7dQGhCv2BkdGMwrd8IDltP
        Cu1/HYHAX6lmaBVpHOd+AAAAAElFTkSuQmCC
</value>
  </data>
</root>